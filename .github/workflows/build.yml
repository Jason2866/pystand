name: pystand downloader for python-build-standalone

on:
  workflow_dispatch:  # Manually start a workflow
  push:
    tags:
      - "v*.*.*"
    paths-ignore:
      - '.github/**' # Ignore changes towards the .github directory
      - '*.md'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: 'x64'
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
      - name: Install dependencies
        run: |
          uv sync
          uv pip install PyInstaller
      - name: Run PyInstaller
        run: |
          uv run pyinstaller --onefile --name pystand --console pystand.py
      - name: Test binary
        shell: bash
        run: |
          dist/pystand.exe -h
      - uses: actions/upload-artifact@v4
        with:
          name: Windows
          path: dist/pystand.exe

  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
     - name: Checkout
       uses: actions/checkout@v4
     - name: Install Python
       uses: actions/setup-python@v5
       with:
         python-version: '3.13'
     - name: Install uv
       uses: astral-sh/setup-uv@v6
       with:
         version: "latest"
     - name: Install dependencies
       run: |
         sudo apt update
         sudo apt install libnotify-dev libsdl2-dev
     - name: Install requirements
       run: |
         uv sync
         uv pip install PyInstaller
     - name: Run PyInstaller
       run: |
         uv run pyinstaller --onefile --name pystand --console pystand.py
     - name: Test binary
       shell: bash
       run: |
         dist/pystand
     - name: Move app
       run: |
         mv dist/pystand pystand
     - name: 'Tar files'
       run: tar -cvf Ubuntu.tar pystand
     - uses: actions/upload-artifact@v4
       with:
         name: Ubuntu
         path: Ubuntu.tar

  build-macos:
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
      - name: Install requirements
        run: |
          uv sync
          uv pip install PyInstaller
      - name: Run PyInstaller
        run: |
          uv run pyinstaller --onefile --name pystand --console pystand.py
      - name: Test binary
        shell: bash
        run: |
          dist/pystand
      - name: Move app
        run: |
          mv dist/pystand.app pystand-macOS.app
      - name: 'Tar files'
        run: tar -cvf macOS.tar pystand-macOS.app
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: macOS
          path: macOS.tar

  build-macos-arm:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
      - name: Install requirements
        run: |
          uv sync
          uv pip install PyInstaller
      - name: Run PyInstaller
        run: |
          uv run pyinstaller --onefile --name pystand --console pystand.py
      - name: Test binary
        shell: bash
        run: |
          dist/pystand
      - name: Move app
        run: |
          mv dist/pystand.app pystand-macOSarm.app
      - name: 'Tar files'
        run: tar -cvf macOSarm.tar pystand-macOSarm.app
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: macOSarm
          path: macOSarm.tar

  release:
      name: Upload binaries to release section
      needs: [build-windows, build-ubuntu, build-macos, build-macos-arm]
      if: startsWith(github.ref, 'refs/tags/')
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            ref: factory
        - name: Download built binaries artifacts
          uses: actions/download-artifact@v4
          with:
            path: binary
            merge-multiple: true
        - name: Display downloaded artifact files
          run: |
            ls -R ./
        - name: Release
          uses: jason2866/action-gh-release@v1.3
          with:
            prerelease: false
            files: |
              binary/*
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
